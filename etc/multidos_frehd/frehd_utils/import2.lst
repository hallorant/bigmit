   1:				; IMPORT2 - Utility for the Vecoven Hard Drive Emulator
   2:				; MultiDOS Version - Tim Halloran (2022) - migrated from LDOS code
   3:				
   4:				; TRS-80 IO Port Definitions
   5:				
   6:     -	00C2          	DATA2       EQU     0C2H
   7:     -	00C3          	SIZE2       EQU     0C3H
   8:     -	00C4          	COMMAND2    EQU     0C4H
   9:     -	00C5          	ERROR2      EQU     0C5H
  10:     -	00CF          	STATUS      EQU     0CFH
  11:				
  12:				; Assembler Control Flags (expected by import2core.z80)
  13:				
  14:     -	0000          	CPM         EQU     0
  15:     -	0001          	TRSDOS      EQU     1
  16:				
  17:				
  18:				; Model I/III/4 MultiDOS addresses
  19:				
  20:     -	4467          	@DSPLY      EQU     4467h ; MultiDOS @VOD
  21:     -	0033          	@DSP        EQU     0033h ; MultiDOS @PUTVO
  22:     -	4454          	@PARAM      EQU     4454h
  23:     -	441C          	@FSPEC      EQU     441Ch ; MultiDOS @FLIK
  24:     -	4420          	@INIT       EQU     4420h
  25:     -	4424          	@OPEN       EQU     4424h
  26:     -	4428          	@CLOSE      EQU     4428h
  27:     -	4436          	@READ       EQU     4436h
  28:     -	4439          	@WRITE      EQU     4439h
  29:     -	4409          	@ERROR      EQU     4409h
  30:     -	402D          	@EXIT       EQU     402dh ; MultiDOS @TODOS
  31:     -	4030          	@ABORT      EQU     4030h       
  32:     -	001B          	@PUT        EQU     001bh ; MultiDOS @PUTBT
  33:     -	401D          	DODCB$      EQU     401dh ; MultiDOS @VODCB
  34:				
  35:     -	5200          	            ORG     5200H
  36:				            
  37:				; MultiDOS jump table (expected by import2core.z80)
  38:				
  39:    0+17	5200  CD6744  	DSPLY       CALL    @DSPLY
  40:   17+10	5203  C9      	            RET
  41:   27+4	5204  00      	DSP         NOP
  42:   31+17	5205  CD3300  	            CALL    @DSP
  43:   48+10	5208  C9      	            RET
  44:   58+10	5209  C9      	SETUP       RET
  45:   68+17	520A  CD1C44  	FSPEC       CALL    @FSPEC
  46:   85+10	520D  C9      	            RET
  47:   95+17	520E  CD2044  	INIT        CALL    @INIT
  48:  112+10	5211  C9      	            RET
  49:  122+17	5212  CD2444  	FOPEN       CALL    @OPEN
  50:  139+10	5215  C9      	            RET
  51:  149+17	5216  CD2844  	FCLOSE      CALL    @CLOSE
  52:  166+10	5219  C9      	            RET
  53:  176+17	521A  CD3644  	FREAD       CALL    @READ
  54:  193+10	521D  C9      	            RET
  55:  203+16	521E  22F756  	FWRITE      LD      (DCB+3), HL
  56:  219+17	5221  CD3944  	            CALL    @WRITE
  57:  236+10	5224  C9      	            RET
  58:  246+17	5225  CD0944  	ERROR       CALL    @ERROR
  59:  263+10	5228  C9      	            RET
  60:  273+17	5229  CD2D40  	EXIT        CALL    @EXIT
  61:  290+10	522C  C9      	            RET
  62:  300+17	522D  CD3040  	ABORT       CALL    @ABORT
  63:  317+10	5230  C9      	            RET
  64:  327+17	5231  CDDA56  	SETERN      CALL    SETERN5
  65:  344+10	5234  C9      		    RET
  66:				
  67:     -	5235          	IMPORT2
  68:  354+11	5235  E5      	            PUSH    HL              ; Save INBUF pointer for import2core.z80
  69:				            
  70:				;; EOF handling differs between TRS-80 DOSes:
  71:				;;  For MultiDOS (also TRSDOS 2.3 and LDOS) word (dcb+12) contains the
  72:				;;  number of 256 byte records in the file, byte (dcb+8) contains the EOF
  73:				;;  offset in the last record (0=256).
  74:				;;  For NEWDOS/80 and TRSDOS 1.3, byte (dcb+8) and word (dcb+12) 
  75:				;;  form a 24 bit number containing the relative byte address of EOF.
  76:				;;  Thus (dcb+12) differs by one if the file length is not a
  77:				;;  multiple of 256 bytes.  DOSPLUS also uses this convention,
  78:				;;  and NEWDOS 2.1 probably does too (not checked).
  79:				            
  80:  365+7	5236  3E00    	SETUPERN    LD      A,0             ; EOF HANDLING
  81:  372+13	5238  32E953  	            LD      (ERNLDOS),A
  82:				
  83:				            INCLUDE import2core.z80
**** import2core.z80 ****
   1:				; Core - Shared by Versions for all OS's
   2:				
   3:				; Misc Constants
   4:				
   5:     -	000D          	CR          EQU     0DH
   6:     -	000A          	LF          EQU     0AH
   7:     -	0003          	ETX         EQU     03H
   8:     -	0020          	SPC         EQU     20H
   9:				
  10:				; Interface defines
  11:				
  12:     -	0003          	OPENFILE    EQU     03H
  13:     -	0004          	READFILE    EQU     04H
  14:     -	0005          	WRITEFILE   EQU     05H
  15:     -	0006          	CLOSEFILE   EQU     06H
  16:     -	0000          	GETVER      EQU     00H
  17:				
  18:				; FatFS flags
  19:				
  20:     -	0000          	FA_OPEN_EXISTING EQU 00H
  21:     -	0001          	FA_READ          EQU 01H
  22:     -	0002          	FA_WRITE         EQU 02H
  23:     -	0004          	FA_CREATE_NEW    EQU 04H
  24:     -	0008          	FA_CREATE_ALWAYS EQU 08H
  25:     -	0010          	FA_OPEN_ALWAYS   EQU 10H
  26:				
  27:     -	523B          	START       
  28:  385+17	523B  CDA953  	            CALL    FREHDTST        ; Check interface is installed
  29:  402+10	523E  E1      	            POP     HL              ; Restore INBUF$ pointer
  30:  412+7	523F  FE00    	            CP      0               ; No?
  31:  419+10	5241  CA7A53  	            JP      Z,DONE          ; Then done
  32:				
  33:				; Parameter Parsing
  34:				            
  35:  429+7	5244  7E      	FLAG0       LD      A,(HL)          ; Look for flags
  36:  436+7	5245  FE20    	            CP      ' '
  37:  443+10	5247  DA6B53  	            JP      C, USAGE		; Error if line ends here
  38:  453+7+5	524A  2003    	            JR      NZ, FLAG1
  39:  460+6	524C  23      	            INC     HL
  40:  466+12	524D  18F5    	            JR      FLAG0
  41:  478+7	524F  FE2D    	FLAG1       CP      '-'             ; Any parameters?
  42:  485+7+5	5251  202C    	            JR      NZ, SOURCE1     ; No so process the source filename
  43:  492+6	5253  23      	            INC     HL
  44:  498+7	5254  7E      	            LD      A,(HL)
  45:  505+7	5255  F620    	FLAG3       OR      20H             ; Make the flag character lowercase
  46:  512+7	5257  FE65    	            CP      'e'
  47:  519+7+5	5259  2006    	            JR      NZ, FLAGL
  48:  526+4	525B  97      	            SUB     A
  49:  530+13	525C  32E953  	            LD      (ERNLDOS), A
  50:  543+12	525F  1815    	            JR      FLAG2
  51:  555+7	5261  FE6C    	FLAGL       CP      'l'
  52:  562+7+5	5263  2007    	            JR      NZ,FLAGN        ; Check for next flag
  53:  569+7	5265  3E01    	            LD      A, 1
  54:  576+13	5267  32E753  	            LD      (LFLAG), A
  55:  589+12	526A  180A    	            JR      FLAG2
  56:  601+7	526C  FE6E    	FLAGN       CP      'n'
  57:  608+10	526E  C26B53  	            JP      NZ, USAGE       ; Unknown flag
  58:  618+7	5271  3E01    	            LD      A, 1
  59:  625+13	5273  32E853  	            LD      (NFLAG), A
  60:  638+6	5276  23      	FLAG2       INC     HL
  61:  644+7	5277  7E      	            LD      A, (HL)
  62:  651+7	5278  FE20    	            CP      ' '
  63:  658+7+5	527A  20D9    	            JR      NZ, FLAG3       ; Another flag follows
  64:  665+6	527C  23      	            INC     HL
  65:  671+12	527D  18C5    	            JR      FLAG0
  66:  683+10	527F  11DB55  	SOURCE1     LD      DE,IOBUF+1		; Copy source filename
  67:  693+7	5282  3E20    	            LD      A, ' '
  68:  700+7	5284  BE      	SOURCE2     CP      (HL)
  69:  707+16	5285  EDA0    	            LDI
  70:  723+7+5	5287  38FB    	            JR      C, SOURCE2
  71:  730+6	5289  1B      	            DEC     DE              ; Nul terminate source filename
  72:  736+7	528A  3E00    	            LD      A, 0
  73:  743+7	528C  12      	            LD      (DE), A              
  74:  750+7+5	528D  2812    	            JR      Z, DEST         ; Destination filename given
  75:				
  76:				; No destination name so translate last component of source filename to be destination filename			
  77:				
  78:  757+6	528F  2B      	        	DEC     HL              ; Back up to terminator
  79:  763+6	5290  2B      	SOURCE3     DEC     HL              ; Back up to last byte of name
  80:  769+7	5291  7E      	            LD      A, (HL)
  81:     -	0001          	            IF TRSDOS
  82:  776+7	5292  FE2E    	            CP      '.'             ; Change '.' to '/'
  83:  783+7+5	5294  2002    	            JR      NZ, NOTDOT
  84:  790+10	5296  362F    	            LD      (HL), '/'
  85:				            ENDIF
  86:  800+7	5298  FE2F    	NOTDOT      CP      '/'
  87:  807+7+5	529A  2804    	            JR      Z, SOURCE4
  88:  814+7	529C  FE20    	            CP      ' '
  89:  821+7+5	529E  20F0    	            JR      NZ, SOURCE3
  90:  828+6	52A0  23      	SOURCE4     INC HL                  ; Point to start of modified last component 
  91:				
  92:  834+10	52A1  11F456  	DEST        LD      DE, DCB         ; Ready to get filename from (hl)
  93:  844+17	52A4  CD0A52  	            CALL    FSPEC
  94:  861+10	52A7  C26B53  	            JP      NZ, USAGE
  95:				
  96:  871+10	52AA  21DB55  	            LD      HL, IOBUF+1		; Source Path
  97:  881+13	52AD  3AE753  	            LD      A, (LFLAG)
  98:  894+4	52B0  B7      	            OR      A
  99:  898+10+7	52B1  C47D53  	            CALL    NZ, LCCONV		; Convert path to lower case
 100:				
 101:  908+7	52B4  0602    	        	LD      B, 2            ; length = 2 (flag + null-terminator)
 102:  915+7	52B6  3E00    	        	LD      A, 0            ; null-terminator
 103:  922+7	52B8  BE      	STLEN1      CP      (HL)
 104:  929+7+5	52B9  2804    	        	JR      Z, COPY         ; Yes so start copy
 105:  936+4	52BB  04      	        	INC     B               ; Found a character
 106:  940+6	52BC  23      	        	INC     HL
 107:  946+12	52BD  18F9    	        	JR      STLEN1
 108:				
 109:  958+7	52BF  3E03    	COPY        LD      A, OPENFILE
 110:  965+11	52C1  D3C4    	            OUT     (COMMAND2), A   ; Send openfile command
 111:  976+17	52C3  CD9B53  	            CALL    WAIT
 112:  993+4	52C6  78      	            LD      A, B
 113:  997+11	52C7  D3C3    	            OUT     (SIZE2), A      ; Send size2
 114: 1008+7	52C9  0EC2    	            LD      C, DATA2
 115: 1015+10	52CB  21DA55  	            LD      HL, IOBUF
 116: 1025+10	52CE  3601    	            LD      (HL), FA_OPEN_EXISTING|FA_READ	; Flags
 117: 1035+16+5	52D0  EDB3    	            OTIR
 118: 1051+17	52D2  CD9B53  	            CALL    WAIT
 119:				
 120:				
 121:     -	52D5          	COPYOPENOK	
 122:     -	0001          	IF TRSDOS
 123: 1068+17	52D5  CD0E52  	            CALL    INIT
 124:				ELSE
 126:				ENDIF
 127: 1085+7+5	52D8  2807    		        JR      Z, OPN2OK
 128: 1092+4	52DA  4F      	        	LD      C, A
 129: 1096+17	52DB  CD2552  	            CALL    ERROR
 130: 1113+10	52DE  C32D52  	            JP      ABORT
 131:				
 132:     -	52E1          	RLOOP
 133: 1123+7	52E1  3E00    	OPN2OK  	LD      A, 0
 134: 1130+11	52E3  D3C3    	        	OUT     (SIZE2), A		; request 256 bytes
 135: 1141+7	52E5  3E04    		        LD      A, READFILE
 136: 1148+11	52E7  D3C4    		        OUT     (COMMAND2), A	; read
 137: 1159+17	52E9  CD9B53  		        CALL    WAIT
 138: 1176+10	52EC  010000  		        LD      BC, 0000h
 139: 1186+11	52EF  DBCF    		        IN      A, (STATUS)		; get status. DRQ set means we read something
 140: 1197+7	52F1  E608    		        AND     08h
 141: 1204+7+5	52F3  2808    		        JR      Z, READOK
 142: 1211+11	52F5  DBC3    		        IN      A, (SIZE2)
 143: 1222+4	52F7  4F      		        LD      C, A
 144: 1226+4	52F8  B7      		        OR      A
 145: 1230+7+5	52F9  2002    		        JR      NZ, READOK
 146: 1237+7	52FB  0601    		        LD      B, 1
 147:     -	52FD          	READOK	
 148: 1244+11	52FD  C5      		        PUSH    BC			; save byte count
 149: 1255+4	52FE  41      		        LD      B, C
 150: 1259+7	52FF  0EC2    		        LD      C, DATA2
 151: 1266+10	5301  21DA55  		        LD      HL, IOBUF
 152: 1276+16+5	5304  EDB2    		        INIR			; read buffer from interface
 153: 1292+10	5306  C1      		        POP     BC
 154:				;; Translate
 155: 1302+13	5307  3AE853  	            LD      A, (nflag)		; check for NL feature
 156: 1315+4	530A  A7      		        AND     A
 157: 1319+7+5	530B  2817    		        JR      z, NLFALS
 158: 1326+10	530D  21DA55  		        LD      HL, IOBUF
 159: 1336+11	5310  C5      		        PUSH    BC			; save byte count
 160: 1347+7	5311  3E0A    		        LD      A, 0ah
 161: 1354+7	5313  160D    		        LD      D, 0dh
 162: 1361+4	5315  0C      		        INC     C			; deal with b=0 and/ c=0
 163: 1365+4	5316  04      		        INC     B
 164: 1369+12	5317  1805    		        JR      tstrt
 165: 1381+7	5319  BE      	TLOOP       CP      (HL)
 166: 1388+7+5	531A  2001    		        JR      NZ, NOTCR
 167: 1395+7	531C  72      		        LD      (HL), D
 168: 1402+6	531D  23      	NOTCR   	INC     HL
 169: 1408+4	531E  0D      	TSTRT       DEC     C
 170: 1412+7+5	531F  20F8    		        JR      NZ, TLOOP
 171: 1419+8+5	5321  10F6    		        DJNZ    TLOOP
 172: 1427+10	5323  C1      		        POP     BC			; restore byte count
 173:				
 174:				;; Write
 175: 1437+11	5324  C5      	NLFALS      PUSH    BC			; save byte count
 176: 1448+10	5325  21DA55  		        LD      HL, IOBUF
 177: 1458+10	5328  11F456  		        LD      DE, DCB
 178: 1468+4	532B  04      	        	INC     B			; deal with b=0 and/or c=0
 179: 1472+4	532C  79      		        LD      A, C
 180: 1476+4	532D  A7      		        AND     A
 181: 1480+7+5	532E  280D    		        JR      Z, WSTRT
 182:     -	5330          	WLOOP       
 183:     -	0000          	IF CPM
 193:				ENDIF
 194: 1487+17	5330  CD1E52  		        CALL    FWRITE      ; write 256 bytes to file
 195: 1504+7+5	5333  2807    	            JR      Z, WROK
 196: 1511+4	5335  4F      		        LD      C, A
 197: 1515+17	5336  CD2552  	            CALL    ERROR              ; oops, i/o error
 198: 1532+10	5339  C32D52  	            JP      ABORT
 199: 1542+4	533C  24      	WROK    	INC     H
 200: 1546+8+5	533D  10F1    	WSTRT       DJNZ    WLOOP
 201: 1554+10	533F  C1      		        POP     BC			; restore byte count
 202:				
 203:				;; Done?
 204: 1564+4	5340  79      		        LD      A, C
 205: 1568+4	5341  A7      		        AND     A
 206: 1572+7+5	5342  2003    	         	JR      NZ, CLOSIT		; done for sure
 207: 1579+4	5344  B8      		        CP      B
 208: 1583+7+5	5345  209A    		        JR      NZ, RLOOP		; maybe not done (sloppy)
 209:				
 210: 1590+7	5347  3E06    	CLOSIT      LD      A, CLOSEFILE
 211: 1597+11	5349  D3C4    	        	OUT     (COMMAND2), A
 212: 1608+17	534B  CD9B53  		        CALL    WAIT
 213:     -	534E          	CLOSOK      
 214:     -	0001          	IF TRSDOS
 215: 1625+4	534E  79      	            LD      A, C
 216: 1629+13	534F  32FC56  		        LD      (dcb+8), A		; set EOF offset
 217: 1642+17	5352  CD3152  		        CALL    SETERN		; set ERN (in case shortening file)
 218:				ENDIF
 219: 1659+10	5355  11F456  		        LD      DE, DCB
 220: 1669+17	5358  CD1652  	            CALL    FCLOSE              ; close the TRS-80 file
 221: 1686+7+5	535B  2807    	            JR      Z, CLS2OK
 222: 1693+4	535D  4F      		        LD      C, A
 223: 1697+17	535E  CD2552  	            CALL    ERROR              ; oops, i/o error
 224: 1714+10	5361  C32D52  	            JP      ABORT
 225: 1724+10	5364  210000  	CLS2OK      LD      HL, 0                ; all is well
 226: 1734+10	5367  C32952  		        JP      EXIT
 227:				
 228:				
 229: 1744+10	536A  C9      	            RET
 230:				
 231: 1754+10	536B  21EA53  	USAGE       LD      HL,INTRO        ; What this is all about
 232: 1764+17	536E  CD0052  	            CALL    DSPLY
 233: 1781+10	5371  212A54  	            LD      HL, USAGER      ; Error message and exit
 234: 1791+17	5374  CD0052  	            CALL    DSPLY
 235: 1808+10	5377  C32D52  	            JP      ABORT
 236:				
 237:				
 238: 1818+10	537A  C32952  	DONE        JP      EXIT
 239:				
 240:				;; Convert (NUL terminated) string in HL to lower case.
 241: 1828+11	537D  E5      	LCCONV      PUSH    HL
 242: 1839+6	537E  23      	            INC     HL
 243: 1845+4	537F  54      	            LD      D, H
 244: 1849+4	5380  5D      	            LD      E, L
 245: 1853+7	5381  7E      	LCLOOP      LD      A, (HL)
 246: 1860+7	5382  FE5B    	            CP      5BH			; USE '[' OR UPARROW AS ESCAPE
 247: 1867+7+5	5384  2004    	            JR      NZ, LCONV1
 248: 1874+6	5386  23      	            INC     HL
 249: 1880+7	5387  7E      	            LD      A, (HL)
 250: 1887+12	5388  1809    	            JR      LCONV2		; CHAR AFTER ESC: DON'T CONVERT
 251: 1899+7	538A  D641    	LCONV1      SUB     'A'
 252: 1906+7	538C  FE1A    	            CP      26
 253: 1913+7	538E  7E      	            LD      A, (HL)
 254: 1920+7+5	538F  3002    	            JR      NC, LCONV2
 255: 1927+7	5391  F620    	            OR      20H			; CONVERT TO LOWER CASE
 256: 1934+7	5393  12      	LCONV2      LD      (DE), A
 257: 1941+6	5394  23      	            INC     HL
 258: 1947+6	5395  13      	            INC     DE
 259: 1953+4	5396  B7      	            OR      A			; NUL TERMINATOR?
 260: 1957+7+5	5397  20E8    	            JR      NZ, LCLOOP
 261: 1964+10	5399  E1      	            POP     HL
 262: 1974+10	539A  C9      	            RET
 263:				
 264:				;;; wait until the interface is ready
 265: 1984+19	539B  E3      	WAIT        EX      (SP),HL
 266: 2003+19	539C  E3      	            EX      (SP),HL			; SMALL DELAY TO SETTLE THE CONTROLLER
 267: 2022+11	539D  DBCF    	WAIT1       IN      A, (STATUS)
 268: 2033+4	539F  07      	            RLCA
 269: 2037+7+5	53A0  38FB    	            JR      C, WAIT1
 270: 2044+11	53A2  DBCF    	            IN      A, (STATUS)			; READ STATUS AGAIN
 271: 2055+7	53A4  E601    	            AND     01H				; NZ = ERROR
 272: 2062+7+5	53A6  2020    	            JR      NZ, UERROR
 273: 2069+10	53A8  C9      	            RET
 274:				
 275: 2079+7	53A9  3E00    	FREHDTST    LD      A,GETVER        ; Test that the interface exists
 276: 2086+11	53AB  D3C4    	            OUT     (COMMAND2),A
 277: 2097+17	53AD  CD9B53  	            CALL    WAIT
 278: 2114+11	53B0  DBC3    	            IN      A,(SIZE2)
 279: 2125+7	53B2  FE06    	            CP      6
 280: 2132+7+5	53B4  2003    	            JR      NZ,FREHDTSTX    ; Size of 6 indicates interface exists
 281: 2139+7	53B6  3E01    	            LD      A,1             ; Return HAS IF
 282: 2146+10	53B8  C9      	            RET
 283: 2156+10	53B9  21EA53  	FREHDTSTX   LD      HL,INTRO        ; Welcome Message
 284: 2166+17	53BC  CD0052  	            CALL    DSPLY
 285: 2183+10	53BF  215054  	            LD      HL,MSGNOIF
 286: 2193+17	53C2  CD0052  	            CALL    DSPLY
 287: 2210+7	53C5  3E00    	            LD      A,0             ; Return NO IF
 288: 2217+10	53C7  C9      	            RET
 289:				
 290:				;; interface error
 291: 2227+10	53C8  216454  	UERROR      LD      HL, ERROR_M		; DISPLAY ERROR PREFIX
 292: 2237+17	53CB  CD0052  	        	CALL    DSPLY
 293: 2254+11	53CE  DBC5    	            IN      A, (ERROR2)		; GET ERROR NUMBER
 294: 2265+7	53D0  FE15    	            CP      15H			; CHECK ERROR NUMBER.
 295: 2272+7+5	53D2  3801    	            JR      C, UERROK
 296: 2279+4	53D4  97      	            SUB     A			; A=0 UNKNOWN ERROR 
 297: 2283+4	53D5  6F      	UERROK      LD      L, A
 298: 2287+7	53D6  2600    	            LD      H, 00H
 299: 2294+11	53D8  29      	            ADD     HL, HL		; POINTERS ARE 2 BYTES
 300: 2305+10	53D9  11B055  	            LD      DE, ERROR_TABLE
 301: 2315+11	53DC  19      	            ADD     HL, DE		; HL POINTS TO THE POINTER
 302: 2326+7	53DD  7E      	            LD      A, (HL)
 303: 2333+6	53DE  23      	            INC     HL
 304: 2339+7	53DF  66      	            LD      H, (HL)
 305: 2346+4	53E0  6F      	            LD      L, A			; HL POINTS TO THE STRING
 306: 2350+17	53E1  CD0052  	            CALL    DSPLY
 307: 2367+10	53E4  C32D52  	            JP      ABORT
 308:				
 309:				
 310:     -	53E7  00      	LFLAG       DEFB 0
 311:     -	53E8  00      	NFLAG       DEFB 0
 312:     -	53E9  00      	ERNLDOS     DEFB 0
 313:				
 314:     -	53EA  494D504F	INTRO       DEFB    'IMPORT2 '
	              52543220
 315:				
 316:				            INCLUDE VERSION.Z80
**** VERSION.Z80 ****
   1:				; Utilities Common Version number
   2:				
   3:     -	53F2  322E3034	            DB      '2.04'
   4:				
   5:				; Includes machine name in the version message
   6:				; Can't find another way of doing this
   7:				
   8:     -	0000          	IF CPM
 317:				ENDIF
 318:				
 319:     -	53F6  202D2049	            DEFB    ' - Import from SD for the FreHD Hard Drive Emulator',CR
	              6D706F72
	              74206672
	              6F6D2053
	              4420666F
	              72207468
	              65204672
	              65484420
	              48617264
	              20447269
	              76652045
	              6D756C61
	              746F720D
 320:     -	542A  55736167	USAGER      DEFB    'Usage: IMPORT2 [-lne] sdfile [tofile]',CR
	              653A2049
	              4D504F52
	              5432205B
	              2D6C6E65
	              5D207364
	              66696C65
	              205B746F
	              66696C65
	              5D0D
 321:     -	5450  496E7465	MSGNOIF     DEFB    'Interface not found',CR
	              72666163
	              65206E6F
	              7420666F
	              756E640D
 322:				
 323:     -	5464  4572726F	ERROR_M     DEFB    'Error: ', 03h
	              723A2003
 324:     -	546C  556E6B6E	FR_UNKNOWN  DEFB    'Unknown error', 0dh			; 0
	              6F776E20
	              6572726F
	              720D
 325:     -	547A  4469736B	FR_DISK_ERR DEFB    'Disk error', 0dh			; 1
	              20657272
	              6F720D
 326:     -	5485  496E7465	FR_INT_ERR  DEFB    'Internal error', 0dh			; 2
	              726E616C
	              20657272
	              6F720D
 327:     -	5494          	FR_NOT_READY    
 328:     -	5494  44726976	            DEFB    'Drive not ready', 0dh 		; 3
	              65206E6F
	              74207265
	              6164790D
 329:     -	54A4  46696C65	FR_NO_FILE  DEFB    'File not found', 0dh	  		; 4
	              206E6F74
	              20666F75
	              6E640D
 330:     -	54B3  50617468	FR_NO_PATH  DEFB    'Path not found', 0dh	  		; 5
	              206E6F74
	              20666F75
	              6E640D
 331:     -	54C2          	FR_INVALID_NAME
 332:     -	54C2  496E7661	            DEFB    'Invalid pathname', 0dh		; 6
	              6C696420
	              70617468
	              6E616D65
	              0D
 333:     -	54D3  41636365	FR_DENIED   DEFB    'Access denied', 0dh			; 7
	              73732064
	              656E6965
	              640D
 334:     -	54E1  46696C65	FR_EXIST    DEFB    'File exists', 0dh			; 8
	              20657869
	              7374730D
 335:     -	54ED          	FR_INVALID_OBJ
 336:     -	54ED  46696C65	            DEFB    'File/dir object invalid', 0dh	; 9
	              2F646972
	              206F626A
	              65637420
	              696E7661
	              6C69640D
 337:     -	5505          	FR_WRITE_PROTECTED
 338:     -	5505  57726974	            DEFB    'Write protected', 0dh		; 10
	              65207072
	              6F746563
	              7465640D
 339:     -	5515          	FR_INVALID_DRIVE
 340:     -	5515  496E7661	            DEFB    'Invalid drive', 0dh		; 11
	              6C696420
	              64726976
	              650D
 341:     -	5523          	FR_NOT_ENABLED  
 342:     -	5523  566F6C75	            DEFB    'Volume not mounted', 0dh		; 12
	              6D65206E
	              6F74206D
	              6F756E74
	              65640D
 343:     -	5536  4E6F2046	FR_NO_FS    DEFB    'No FAT fs found', 0dh			; 13
	              41542066
	              7320666F
	              756E640D
 344:     -	5546          	FR_MKFS_ABORTED
 345:     -	5546  6D6B6673	            DEFB    'mkfs aborted', 0dh		; 14
	              2061626F
	              72746564
	              0D
 346:     -	5553  54696D65	FR_TIMEOUT  DEFB    'Timeout detected', 0dh		; 15
	              6F757420
	              64657465
	              63746564
	              0D
 347:     -	5564  46696C65	FR_LOCKED   DEFB    'File locked', 0dh			; 16
	              206C6F63
	              6B65640D
 348:     -	5570          	FR_NOT_ENOUGH_CORE
 349:     -	5570  4E6F7420	            DEFB    'Not enough core', 0dh		; 17
	              656E6F75
	              67682063
	              6F72650D
 350:     -	5580          	FR_TOO_MANY_OPEN_FILES
 351:     -	5580  546F6F20	            DEFB    'Too many open files', 0dh ; 18
	              6D616E79
	              206F7065
	              6E206669
	              6C65730D
 352:     -	5594          	FR_INVALID_PARAM
 353:     -	5594  496E7661	            DEFB    'Invalid parameter', 0dh		; 19
	              6C696420
	              70617261
	              6D657465
	              720D
 354:     -	55A6          	FR_DISK_FULL
 355:     -	55A6  4469736B	            DEFB    'Disk full', 0dh			; 20
	              2066756C
	              6C0D
 356:     -	55B0          	ERROR_TABLE
 357:     -	55B0  6C547A54	            DEFW    FR_UNKNOWN ,FR_DISK_ERR, FR_INT_ERR, FR_NOT_READY, FR_NO_FILE
	              85549454
	              A454
 358:     -	55BA  B354C254	            DEFW    FR_NO_PATH, FR_INVALID_NAME, FR_DENIED, FR_EXIST, FR_INVALID_OBJ
	              D354E154
	              ED54
 359:     -	55C4  05551555	            DEFW    FR_WRITE_PROTECTED, FR_INVALID_DRIVE, FR_NOT_ENABLED
	              2355
 360:     -	55CA  36554655	            DEFW    FR_NO_FS, FR_MKFS_ABORTED, FR_TIMEOUT, FR_LOCKED
	              53556455
 361:     -	55D2  70558055	            DEFW    FR_NOT_ENOUGH_CORE, FR_TOO_MANY_OPEN_FILES, FR_INVALID_PARAM
	              9455
 362:     -	55D8  A655    	            DEFW    FR_DISK_FULL	
 363:				
 364:     -	55DA          	IOBUF       DEFS    256
 365:				
**** import2_multidos.z80 ****
  84:				
  85: 2377+16	56DA  2AFE56  	SETERN5     LD      HL, (DCB+10)    ; current record number
  86: 2393+13	56DD  3AE953  	            LD      A, (ERNLDOS)    ; get ERN convention
  87: 2406+4	56E0  B7      	            OR      A
  88: 2410+7+5	56E1  2004    	            JR      NZ, NOADJ       ; go if TRSDOS 2.3/LDOS convention
  89: 2417+4	56E3  B1      	ADJ         OR      C	            ; length multiple of 256 bytes?
  90: 2421+7+5	56E4  2801    	            JR      Z, NOADJ        ; go if so
  91: 2428+6	56E6  2B      	            DEC     HL	            ; no, # of records - 1
  92: 2434+16	56E7  220057  	NOADJ       LD      (DCB+12), HL
  93: 2450+10	56EA  C9      	            RET	
  94:				
  95: 2460+16	56EB  2AFE56  	SETERN6     LD      HL, (DCB+10)
  96: 2476+16	56EE  220057  	            LD      (DCB+12), HL
  97: 2492+10	56F1  C9      	            RET
  98:				
  99:     -	56F2          	PARM        DS      2
 100:				          
 101:     -	56F4          	DCB         DEFS    32  ; 32 bytes for MultiDOS
 102:				
 103:     -	5235          	            END     IMPORT2



Statistics:

     4	passes
     0	jr promotions
   128	symbols
  1010	bytes



Symbol Table:

@ABORT         =4030      16432
@CLOSE         =4428      17448
@DSP           =33        51
@DSPLY         =4467      17511
@ERROR         =4409      17417
@EXIT          =402D      16429
@FSPEC         =441C      17436
@INIT          =4420      17440
@OPEN          =4424      17444
@PARAM         =4454      17492
@PUT           =1B        27
@READ          =4436      17462
@WRITE         =4439      17465
ABORT           522D      21037
ADJ             56E3      22243
CLOSEFILE      =06        6
CLOSIT          5347      21319
CLOSOK          534E      21326
CLS2OK          5364      21348
COMMAND2       =C4        196
COPY            52BF      21183
COPYOPENOK      52D5      21205
CPM            =00        0
CR             =0D        13
DATA2          =C2        194
DCB             56F4      22260
DEST            52A1      21153
DODCB$         =401D      16413
DONE            537A      21370
DSP             5204      20996
DSPLY           5200      20992
ERNLDOS         53E9      21481
ERROR           5225      21029
ERROR2         =C5        197
ERROR_M         5464      21604
ERROR_TABLE     55B0      21936
ETX            =03        3
EXIT            5229      21033
FA_CREATE_ALWAYS=08        8
FA_CREATE_NEW  =04        4
FA_OPEN_ALWAYS =10        16
FA_OPEN_EXISTING=00        0
FA_READ        =01        1
FA_WRITE       =02        2
FCLOSE          5216      21014
FLAG0           5244      21060
FLAG1           524F      21071
FLAG2           5276      21110
FLAG3           5255      21077
FLAGL           5261      21089
FLAGN           526C      21100
FOPEN           5212      21010
FREAD           521A      21018
FREHDTST        53A9      21417
FREHDTSTX       53B9      21433
FR_DENIED       54D3      21715
FR_DISK_ERR     547A      21626
FR_DISK_FULL    55A6      21926
FR_EXIST        54E1      21729
FR_INT_ERR      5485      21637
FR_INVALID_DRIVE 5515      21781
FR_INVALID_NAME 54C2      21698
FR_INVALID_OBJ  54ED      21741
FR_INVALID_PARAM 5594      21908
FR_LOCKED       5564      21860
FR_MKFS_ABORTED 5546      21830
FR_NOT_ENABLED  5523      21795
FR_NOT_ENOUGH_CORE 5570      21872
FR_NOT_READY    5494      21652
FR_NO_FILE      54A4      21668
FR_NO_FS        5536      21814
FR_NO_PATH      54B3      21683
FR_TIMEOUT      5553      21843
FR_TOO_MANY_OPEN_FILES 5580      21888
FR_UNKNOWN      546C      21612
FR_WRITE_PROTECTED 5505      21765
FSPEC           520A      21002
FWRITE          521E      21022
GETVER         =00        0
IMPORT2         5235      21045
INIT            520E      21006
INTRO           53EA      21482
IOBUF           55DA      21978
LCCONV          537D      21373
LCLOOP          5381      21377
LCONV1          538A      21386
LCONV2          5393      21395
LF             =0A        10
LFLAG           53E7      21479
MSGNOIF         5450      21584
NFLAG           53E8      21480
NLFALS          5324      21284
NOADJ           56E7      22247
NOTCR           531D      21277
NOTDOT          5298      21144
OPENFILE       =03        3
OPN2OK          52E1      21217
PARM            56F2      22258
READFILE       =04        4
READOK          52FD      21245
RLOOP           52E1      21217
SETERN          5231      21041
SETERN5         56DA      22234
SETERN6         56EB      22251
SETUP           5209      21001
SETUPERN        5236      21046
SIZE2          =C3        195
SOURCE1         527F      21119
SOURCE2         5284      21124
SOURCE3         5290      21136
SOURCE4         52A0      21152
SPC            =20        32
START           523B      21051
STATUS         =CF        207
STLEN1          52B8      21176
TLOOP           5319      21273
TRSDOS         =01        1
UERROK          53D5      21461
UERROR          53C8      21448
USAGE           536B      21355
USAGER          542A      21546
WAIT            539B      21403
WAIT1           539D      21405
WLOOP           5330      21296
WRITEFILE      =05        5
WROK            533C      21308
WSTRT           533D      21309
tstrt           531E      21278
