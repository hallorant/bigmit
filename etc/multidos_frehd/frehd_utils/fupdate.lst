   1:				;; fupdate.z80
   2:				;; MultiDOS version
   3:				;;
   4:				;; Frederic Vecoven, 4/15/13
   5:				;; Tim Halloran (2022) - migrated from LDOS code
   6:				;;
   7:				;; Usage: FUPDATE fromfile
   8:				;;
   9:				;; FUPDATE will put the hard drive emulator in bootloader mode, and send
  10:				;; the HEX file using the TRS80.
  11:				;;
  12:				
  13:				; Assembler Control Flags
  14:				
  15:     -	0000          	CPM         EQU     0
  16:     -	0001          	TRSDOS      EQU     1
  17:				
  18:				;; MultiDOS addresses
  19:     -	441C          	@fspec  equ 441ch ; MultiDOS @FLIK
  20:     -	4420          	@init   equ 4420h
  21:     -	4424          	@open   equ 4424h
  22:     -	4428          	@close  equ 4428h
  23:     -	4436          	@read   equ 4436h
  24:     -	4439          	@write  equ 4439h
  25:     -	4409          	@error  equ 4409h
  26:     -	402D          	@exit   equ 402dh ; MultiDOS @TODOS
  27:     -	4030          	@abort  equ 4030h
  28:     -	001B          	@put	equ 001bh ; MultiDOS @PUTBT
  29:     -	0033          	@dsp    equ 0033h ; MultiDOS @PUTVO
  30:     -	4467          	@dsply  equ 4467h ; MultiDOS @VOD
  31:     -	401D          	dodcb$	equ 401dh ; MultiDOS @VODCB
  32:				
  33:				;; Model 4 only: file init or open with wrong LRL.  Can be ignored.
  34:     -	002A          	lrlerr  equ 42
  35:				
  36:				;; Interface defines
  37:     -	00C2          	DATA2	  equ 0c2h
  38:     -	00C3          	SIZE2     equ 0c3h
  39:     -	00C4          	COMMAND2  equ 0c4h
  40:     -	00CF          	STATUS    equ 0cfh
  41:     -	00C5          	READC5	  equ 0c5h  ; should read 4F in bootloader mode
  42:				
  43:     -	5200          		org 5200h
  44:				
  45:				;; Jump tables for OS independence
  46:    0+17	5200  CD1C44  	fspec:	call @fspec
  47:   17+10	5203  C9      		ret
  48:   27+17	5204  CD2044  	init:	call @init
  49:   44+10	5207  C9      		ret
  50:   54+17	5208  CD2444  	open:	call @open
  51:   71+10	520B  C9      		ret
  52:   81+17	520C  CD2844  	close:	call @close
  53:   98+10	520F  C9      		ret
  54:  108+17	5210  CD3644  	reed:	call @read
  55:  125+10	5213  C9      		ret
  56:  135+17	5214  CD3944  	write:	call @write
  57:  152+10	5217  C9      		ret
  58:  162+17	5218  CD0944  	error:	call @error
  59:  179+10	521B  C9      		ret
  60:  189+17	521C  CD2D40  	exit:	call @exit
  61:  206+10	521F  C9      		ret
  62:  216+17	5220  CD3040  	abort:	call @abort
  63:  233+10	5223  C9      		ret
  64:  243+17	5224  CD6744  	dsply:	call @dsply
  65:  260+10	5227  C9      		ret
  66:  270+4	5228  79      	dsp:    ld a,c	
  67:  274+17	5229  CD3300  	        call @dsp
  68:  291+10	522C  C9      		ret
  69:  301+17	522D  CDD553  	getern:	call getern5
  70:  318+10	5230  C9      		ret
  71:				
  72:				; Nonzero for LDOS ern convention
  73:     -	5231  01      	ernldos: db 1
  74:				
  75:     -	5232          	fupdate:
  76:  328+7	5232  3E00    	        ld a,0                  ; EOF handling
  77:  335+13	5234  323152  	        ld (ernldos), a
  78:				
  79:  348+10	5237  11DC54  	fromf:	ld de, dcb              ; ready to get LDOS filename from (HL)
  80:  358+17	523A  CD0052  	        call fspec
  81:  375+10	523D  C2C653  	        jp nz, usage		; Z set if valid
  82:				
  83:  385+10	5240  210C55  		ld hl, iobuf
  84:  395+10	5243  11DC54  	        ld de, dcb
  85:  405+7	5246  0600    	        ld b, 0
  86:  412+17	5248  CD0852  	        call open               ; open the TRS-80 file
  87:  429+7+5	524B  280B    	        jr z, opn2ok		; Z set if success
  88:  436+7	524D  FE2A    		cp lrlerr
  89:  443+7+5	524F  2807    		jr z, opn2ok
  90:  450+4	5251  4F      		ld c, a			; A error number
  91:  454+17	5252  CD1852  	        call error
  92:  471+10	5255  C32052  	        jp abort
  93:				
  94:				;; Enter bootloader
  95:  481+10	5258  214354  	opn2ok:	ld hl, welcom		; welcome message
  96:  491+17	525B  CD2452  		call dsply
  97:				
  98:  508+17	525E  CDA453  		call inboot		; already in bootloader ?
  99:  525+7+5	5261  282B    		jr z, opn4ok		; yes
 100:					
 101:  532+10	5263  21AB54  		ld hl,boot2		; print "entering bootloader"
 102:  542+17	5266  CD2452  		call dsply
 103:  559+7	5269  3E07    		ld a, 07h		; enter bootloader
 104:  566+11	526B  D3C4    		out (COMMAND2), a
 105:  577+17	526D  CDAE53  		call wait
 106:  594+7	5270  3E15    		ld a, 15h
 107:  601+11	5272  D3C2    		out (DATA2), a
 108:  612+7	5274  3E04    		ld a, 04h
 109:  619+11	5276  D3C2    		out (DATA2), a
 110:  630+17	5278  CDAE53  		call wait
 111:  647+11	527B  D3C3    		out (SIZE2), a		; flush eventual buffer in interface
 112:  658+17	527D  CDAE53  		call wait
 113:  675+17	5280  CDA453  		call inboot		; check again
 114:  692+7+5	5283  280F    		jr z, opn3ok		; OK !
 115:  699+10	5285  216754  		ld hl, notboot		; didn't enter bootloader => error
 116:  709+17	5288  CD2452  		call dsply
 117:  726+10	528B  C32052  		jp abort
 118:				
 119:  736+10	528E  218B54  	opn4ok:	ld hl,boot1		; "already in bootloader"
 120:  746+17	5291  CD2452  		call dsply
 121:				
 122:  763+10	5294  21CA54  	opn3ok: ld hl,eraseF		; we are in bootloader. Send ERASE.
 123:  773+7	5297  3E0D    	eloop:	ld a,0dh		; 0D ?
 124:  780+7	5299  BE      		cp (hl)
 125:  787+7+5	529A  2807    		jr z,ecom		; yes, commit erase
 126:  794+7	529C  7E      		ld a,(hl)		; no, send byte
 127:  801+11	529D  D3C2    		out (DATA2),a
 128:  812+6	529F  23      		inc hl
 129:  818+10	52A0  C39752  		jp eloop
 130:  828+11	52A3  D3C3    	ecom:	out (SIZE2),a		; commit
 131:  839+17	52A5  CDAE53  		call wait
 132:  856+11	52A8  DBCF    		in a, (STATUS)
 133:  867+17	52AA  CDB653  		call disp_status
 134:				
 135:				
 136:				;; Read
 137:  884+10	52AD  11DC54  		ld de, dcb
 138:  894+17	52B0  CD2D52  		call getern		; count down records in bc
 139:				
 140:  911+10	52B3  11DC54  	loop:	ld de, dcb
 141:  921+10	52B6  210C55  		ld hl, iobuf
 142:  931+17	52B9  CD1052  		call reed               ; read 256 bytes from file
 143:  948+7+5	52BC  280B    	        jr z, rdok		; got a full 256 bytes
 144:  955+7	52BE  FE1C    		cp 28			; eof?
 145:  962+7+5	52C0  2843    		jr z, closok		; yes, OK
 146:  969+4	52C2  4F      		ld c, a
 147:  973+17	52C3  CD1852  	        call error              ; oops, i/o error
 148:  990+10	52C6  C32052  	        jp abort
 149: 1000+6	52C9  0B      	rdok:	dec bc
 150:				
 151:				;; Process
 152: 1006+11	52CA  C5      		push bc			; save record count
 153:				
 154: 1017+4	52CB  79      		ld a, c
 155: 1021+4	52CC  B0      		or b			; Z : last record 
 156: 1025+7	52CD  0600    		ld b, 00h		; byte count
 157: 1032+7+5	52CF  2004    		jr nz, tloop		; jump if not last record
 158: 1039+13	52D1  3AE454  		ld a, (dcb+8)
 159: 1052+4	52D4  47      		ld b, a
 160:				
 161: 1056+7	52D5  3E0D    	tloop:	ld a, 0dh		; 0D ?
 162: 1063+7	52D7  BE      		cp (hl)
 163: 1070+7+5	52D8  2805    		jr z, dolf
 164: 1077+7	52DA  3E0A    		ld a, 0ah		; 0A ?
 165: 1084+7	52DC  BE      		cp (hl)
 166: 1091+7+5	52DD  2016    		jr nz,notlf
 167: 1098+13	52DF  3ADB54  	dolf:	ld a, (flag)		; anything to commit ?
 168: 1111+4	52E2  A7      		and a
 169: 1115+7+5	52E3  2818    		jr z, nextb		; no
 170: 1122+11	52E5  D3C3    		out (SIZE2), a		; yes
 171: 1133+17	52E7  CDAE53  		call wait		; wait until the interface is no more busy
 172: 1150+11	52EA  DBCF    		in a, (STATUS)		; get status
 173: 1161+17	52EC  CDB653  		call disp_status
 174: 1178+4	52EF  AF      		xor a
 175: 1182+13	52F0  32DB54  		ld (flag), a		; clear flag
 176: 1195+12	52F3  1808    		jr nextb	
 177: 1207+7	52F5  7E      	notlf:	ld a, (hl)		; get one byte
 178: 1214+11	52F6  D3C2    		out (DATA2), a		; send it to the interface
 179: 1225+7	52F8  3E01    		ld a, 1
 180: 1232+13	52FA  32DB54  		ld (flag), a		; set flag
 181: 1245+6	52FD  23      	nextb:	inc hl			; next byte
 182: 1251+8+5	52FE  10D5    		djnz tloop
 183:					
 184: 1259+10	5300  C1      		pop bc			; restore record count
 185:				
 186: 1269+4	5301  79      		ld a, c			; next chunk, if any
 187: 1273+4	5302  B0      		or b
 188: 1277+7+5	5303  20AE    		jr nz, loop
 189:				
 190:				
 191: 1284+10	5305  11DC54  	closok:	ld de, dcb
 192: 1294+17	5308  CD0C52  	        call close              ; close the TRS-80 file
 193: 1311+7+5	530B  2807    	        jr z, cls2ok
 194: 1318+4	530D  4F      		ld c, a
 195: 1322+17	530E  CD1852  	        call error              ; oops, i/o error
 196: 1339+10	5311  C32052  	        jp abort
 197:     -	5314          	cls2ok: 
 198: 1349+10	5314  212A54  	        ld  hl,usager-1
 199: 1359+17	5317  CD2452  	        call dsply
 200:     -	0003          	ETX			EQU		3
 201:     -	0000          	GETVER		EQU		0
 202:				
 203:						include GETVERSION.Z80
**** GETVERSION.Z80 ****
   1: 1376+7	531A  3E00    	            LD      A,GETVER
   2: 1383+11	531C  D3C4    	            OUT     (COMMAND2),A
   3: 1394+17	531E  CDAE53  	            CALL    WAIT
   4: 1411+10	5321  218353  	            LD      HL,MSGVER       ; Version Label
   5: 1421+17	5324  CD2452  	            CALL    DSPLY
   6: 1438+17	5327  CD3453  	            CALL    GETVERSION2     ; Display Details
   7: 1455+10	532A  218E53  	            LD      HL,MSGBVER      ; Boot Loader Version Label
   8: 1465+17	532D  CD2452  	            CALL    DSPLY
   9: 1482+17	5330  CD3453  	            CALL    GETVERSION2     ; Display Details
  10: 1499+10	5333  C9      	            RET
  11:				            
  12: 1509+11	5334  DBC2    	GETVERSION2 IN		A,(DATA2)		; Major Version Number
  13: 1520+17	5336  CD4553  	            CALL	DSVERSION
  14: 1537+7	5339  3E2E    	            LD		A,'.'
  15: 1544+4	533B  4F      	            LD		C,A
  16: 1548+17	533C  CD2852  	            CALL	DSP
  17: 1565+11	533F  DBC2    	            IN		A,(DATA2)		; Minor Version Number
  18: 1576+17	5341  CD4F53  	            CALL	DSVERSION2
  19: 1593+10	5344  C9      	            RET
  20:							
  21: 1603+17	5345  CD6C53  	DSVERSION   CALL	BIN2BCD			; Enter here to mask the leading 0
  22: 1620+11	5348  F5      	            PUSH	AF
  23: 1631+7	5349  E6F0    	            AND		0F0H			; Mask out the lower digit
  24: 1638+7+5	534B  2815    	            JR		Z,DSVERSION4
  25: 1645+12	534D  1806    	            JR		DSVERSION3
  26:				
  27: 1657+17	534F  CD6C53  	DSVERSION2  CALL	BIN2BCD			; Enter here to keep the leading 0
  28: 1674+11	5352  F5      	            PUSH	AF
  29: 1685+7	5353  E6F0    	            AND		0F0H
  30: 1692+8	5355  CB3F    	DSVERSION3  SRL		A
  31: 1700+8	5357  CB3F    	            SRL		A
  32: 1708+8	5359  CB3F    	            SRL		A
  33: 1716+8	535B  CB3F    	            SRL		A
  34: 1724+7	535D  C630    	            ADD		A,30H			; To ASCII
  35: 1731+17	535F  CD2852  	            CALL	DSP             ; LDOS 6 wants in C, LDOS 5 in A - DSP handles this
  36: 1748+10	5362  F1      	DSVERSION4  POP		AF
  37: 1758+7	5363  E60F    	            AND		00FH			; Mask out the upper digit
  38: 1765+7	5365  C630    	            ADD		A,30H			; To ASCII
  39: 1772+4	5367  4F      	            LD		C,A
  40: 1776+17	5368  CD2852  	            CALL	DSP
  41: 1793+10	536B  C9      	            RET
  42:				
  43: 1803+10	536C  010000  	BIN2BCD     LD		BC,0
  44: 1813+7	536F  D60A    	BIN2BCD1    SUB		10				; Count number of 10's deducted into B
  45: 1820+10	5371  FA7753  	            JP		M,BIN2BCD2
  46: 1830+4	5374  04      	            INC		B
  47: 1834+12	5375  18F8    	            JR		BIN2BCD1
  48: 1846+7	5377  C60A    	BIN2BCD2    ADD		A,10			; Add back the last 10
  49: 1853+8	5379  CB20    	            SLA		B				; Move the 10's into the top 4 bits
  50: 1861+8	537B  CB20    	            SLA		B
  51: 1869+8	537D  CB20    	            SLA		B
  52: 1877+8	537F  CB20    	            SLA		B
  53: 1885+4	5381  B0      	            OR		B				; Merge in the 10's
  54: 1889+10	5382  C9      	            RET
  55:				
  56:     -	5383  4669726D	MSGVER      DB      'Firmware: ',ETX
	              77617265
	              3A2003
  57:     -	538E  2020426F	MSGBVER     DB      '  Boot Loader: ',ETX
	              6F74204C
	              6F616465
	              723A2003
**** fupdate_multidos.z80 ****
 204:				
 205: 1899+10	539E  210000  	    ld hl,0
 206: 1909+10	53A1  C31C52  	    jp exit
 207:				    
 208:				;;; check if we are in bootloader mode (Z set if in bootloader)
 209: 1919+17	53A4  CDAE53  	inboot: call wait
 210: 1936+11	53A7  DBC5    		in a, (READC5)
 211: 1947+11	53A9  DBC5    		in a, (READC5)
 212: 1958+7	53AB  FE4F    		cp 04Fh
 213: 1965+10	53AD  C9      		ret
 214:				
 215:				
 216:				;;; wait until the interface is ready
 217: 1975+19	53AE  E3      	wait:	ex (sp),hl
 218: 1994+19	53AF  E3      		ex (sp),hl			; small delay to settle the controller
 219: 2013+11	53B0  DBCF    	wait1:	in a, (STATUS)
 220: 2024+4	53B2  07      		rlca
 221: 2028+7+5	53B3  38FB    		jr c, wait1
 222: 2035+10	53B5  C9      		ret
 223:				
 224:				;;; display A = status as a char
 225:     -	53B6          	disp_status:
 226: 2045+11	53B6  E5      		push hl
 227: 2056+7	53B7  E607    		and 07h
 228: 2063+4	53B9  6F      		ld l, a
 229: 2067+7	53BA  2600    		ld h, 00h
 230: 2074+10	53BC  11C254  		ld de, status_chars
 231: 2084+11	53BF  19      		add hl, de		; hl points to the char
 232: 2095+7	53C0  4E      		ld c, (hl)
 233:					;push af
 234: 2102+17	53C1  CD2852  		call dsp
 235:					;pop af
 236: 2119+10	53C4  E1      		pop hl
 237: 2129+10	53C5  C9      		ret
 238:				
 239:					
 240:				;; Usage message
 241: 2139+10	53C6  21EA53  	usage:  ld hl, intro            ; what this program is all about
 242: 2149+17	53C9  CD2452  	        call dsply
 243: 2166+10	53CC  212B54  	        ld hl, usager           ; error message and exit
 244: 2176+17	53CF  CD2452  	        call dsply
 245: 2193+10	53D2  C32052  	        jp abort
 246:				
 247:				;; EOF handling differs between TRS-80 DOSes:
 248:				;;  For TRSDOS 2.3 and LDOS, word (dcb+12) contains the number of
 249:				;;  256 byte records in the file, byte (dcb+8) contains the EOF
 250:				;;  offset in the last record (0=256).
 251:				;;  For NEWDOS/80 and TRSDOS 1.3, byte (dcb+8) and word (dcb+12) 
 252:				;;  form a 24 bit number containing the relative byte address of EOF.
 253:				;;  Thus (dcb+12) differs by one if the file length is not a
 254:				;;  multiple of 256 bytes.  DOSPLUS also uses this convention,
 255:				;;  and NEWDOS 2.1 probably does too (not checked).
 256:				
 257:				; Returns number of (partial or full) records in BC, destroys A
 258:     -	53D5          	getern5:
 259: 2203+20	53D5  ED4BE854		ld bc, (dcb+12)
 260: 2223+13	53D9  3A3152  		ld a, (ernldos)         ; get ERN convention
 261: 2236+4	53DC  A7      		and a
 262: 2240+5+6	53DD  C0      		ret nz                  ; done if TRSDOS 2.3/LDOS convention
 263: 2245+13	53DE  3AE454  		ld a, (dcb+8)		; length multiple of 256 bytes?
 264: 2258+4	53E1  A7      		and a
 265: 2262+5+6	53E2  C8      		ret z                   ; done if so
 266: 2267+6	53E3  03      		inc bc			; no, # of records = last full record + 1
 267: 2273+10	53E4  C9      		ret	
 268:				
 269:				; All Model 4 mode operating systems should be TRSDOS/LS-DOS 6.x compatible
 270:     -	53E5          	getern6:
 271: 2283+20	53E5  ED4BE854		ld bc, (dcb+12)
 272: 2303+10	53E9  C9      		ret
 273:				
 274:				
 275:     -	53EA  46555044	intro: defb 'FUPDATE '
	              41544520
 276:				
 277:				       INCLUDE VERSION.Z80
**** VERSION.Z80 ****
   1:				; Utilities Common Version number
   2:				
   3:     -	53F2  322E3034	            DB      '2.04'
   4:				
   5:				; Includes machine name in the version message
   6:				; Can't find another way of doing this
   7:				
   8:     -	0000          	IF CPM
 278:				ENDIF
 279:				
 280:     -	53F6  202D2046	       defb ' - Firmware Update for the FreHD Hard Drive Emulator', 0dh
	              69726D77
	              61726520
	              55706461
	              74652066
	              6F722074
	              68652046
	              72654844
	              20486172
	              64204472
	              69766520
	              456D756C
	              61746F72
	              0D
 281:     -	542B  55736167	usager: defb 'Usage: FUPDATE fromfile', 0dh
	              653A2046
	              55504441
	              54452066
	              726F6D66
	              696C650D
 282:     -	5443  48617264	welcom:	defb 'Hard Drive Emulator Firmware Update', 0dh
	              20447269
	              76652045
	              6D756C61
	              746F7220
	              4669726D
	              77617265
	              20557064
	              6174650D
 283:     -	5467  4572726F	notboot:defb 'Error: cannot enter bootloader mode', 0dh
	              723A2063
	              616E6E6F
	              7420656E
	              74657220
	              626F6F74
	              6C6F6164
	              6572206D
	              6F64650D
 284:     -	548B  496E7465	boot1:	defb 'Interface already in bootloader', 0dh
	              72666163
	              6520616C
	              72656164
	              7920696E
	              20626F6F
	              746C6F61
	              6465720D
 285:     -	54AB  456E7465	boot2:	defb 'Entering bootloader...', 0dh
	              72696E67
	              20626F6F
	              746C6F61
	              6465722E
	              2E2E0D
 286:     -	54C2  2E      	status_chars:	defb '.'  ; ok
 287:     -	54C3  52      		defb 'R'	  ; range error
 288:     -	54C4  49      		defb 'I'	  ; ignored
 289:     -	54C5  43      		defb 'C'	  ; checksum error
 290:     -	54C6  58      		defb 'X'	  ; invalid
 291:     -	54C7  53      		defb 'S'	  ; sequence error
 292:     -	54C8  50      		defb 'P'	  ; protected
 293:     -	54C9  3F      		defb '?'	  ; n/a
 294:				
 295:     -	54CA  3A303246	eraseF:	defb ':02FF00060000F9', 0Dh, 0h
	              46303030
	              36303030
	              3046390D
	              00
 296:				
 297:     -	54DB  00      	flag:	defb 0
 298:     -	54DC          	dcb:	defs 48			; 48 for Model III TRSDOS 1.3
 299:     -	550C          	iobuf:	defs 256
 300:				        
 301:     -	5232          	        end fupdate



Statistics:

     4	passes
     0	jr promotions
    79	symbols
   732	bytes



Symbol Table:

@abort         =4030      16432
@close         =4428      17448
@dsp           =33        51
@dsply         =4467      17511
@error         =4409      17417
@exit          =402D      16429
@fspec         =441C      17436
@init          =4420      17440
@open          =4424      17444
@put           =1B        27
@read          =4436      17462
@write         =4439      17465
BIN2BCD         536C      21356
BIN2BCD1        536F      21359
BIN2BCD2        5377      21367
COMMAND2       =C4        196
CPM            =00        0
DATA2          =C2        194
DSVERSION       5345      21317
DSVERSION2      534F      21327
DSVERSION3      5355      21333
DSVERSION4      5362      21346
ETX            =03        3
GETVER         =00        0
GETVERSION2     5334      21300
MSGBVER         538E      21390
MSGVER          5383      21379
READC5         =C5        197
SIZE2          =C3        195
STATUS         =CF        207
TRSDOS         =01        1
abort           5220      21024
boot1           548B      21643
boot2           54AB      21675
close           520C      21004
closok          5305      21253
cls2ok          5314      21268
dcb             54DC      21724
disp_status     53B6      21430
dodcb$         =401D      16413
dolf            52DF      21215
dsp             5228      21032
dsply           5224      21028
ecom            52A3      21155
eloop           5297      21143
eraseF          54CA      21706
ernldos         5231      21041
error           5218      21016
exit            521C      21020
flag            54DB      21723
fromf           5237      21047
fspec           5200      20992
fupdate         5232      21042
getern          522D      21037
getern5         53D5      21461
getern6         53E5      21477
inboot          53A4      21412
init            5204      20996
intro           53EA      21482
iobuf           550C      21772
loop            52B3      21171
lrlerr         =2A        42
nextb           52FD      21245
notboot         5467      21607
notlf           52F5      21237
open            5208      21000
opn2ok          5258      21080
opn3ok          5294      21140
opn4ok          528E      21134
rdok            52C9      21193
reed            5210      21008
status_chars    54C2      21698
tloop           52D5      21205
usage           53C6      21446
usager          542B      21547
wait            53AE      21422
wait1           53B0      21424
welcom          5443      21571
write           5214      21012
